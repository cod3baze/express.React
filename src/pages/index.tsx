import { useEffect, useState } from "react";
import Head from "next/head";
import ToastAlert from "react-hot-toast";

import * as Yup from "yup";
import { yupResolver } from "@hookform/resolvers/yup";
import { useForm, SubmitHandler } from "react-hook-form";

import { useAuthContext } from "../contexts/AuthContext";

import { Button } from "../components/Buttons/Default";

import styles from "../styles/pages/Auth.module.scss";

type SignInFormData = {
  username: string;
  password: string;
};

const signInFormSchema = Yup.object().shape({
  username: Yup.string().required("Username obrigatório"),
  password: Yup.string().required("Código obrigatório"),
});

/**
 * Page to handle users login
 * @returns Session page
 */
export default function AuthPage() {
  const [loginIsLoading, setLoginIsLoading] = useState<boolean>(false);

  const { signIn } = useAuthContext();

  const { register, handleSubmit } = useForm({
    resolver: yupResolver(signInFormSchema),
  });

  const handleSignIn: SubmitHandler<SignInFormData> = async (values) => {
    try {
      setLoginIsLoading(true);
      await signIn(values);
    } catch (error) {
      setLoginIsLoading(false);
      ToastAlert.error(error.message);
    }
  };

  useEffect(() => {
    () => setLoginIsLoading(false);
  }, []);

  return (
    <>
      <Head>
        <title>Session | Genesis Express</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div id={styles.pageAuth}>
        <aside>
          <img
            src="/assets/illustration.svg"
            alt="ilustração simbolizando perguntas e respostas"
            draggable={false}
          />
          <strong>Gerencie sua empresa</strong>
          <p>ponto de venda</p>
        </aside>

        <main>
          <div className={styles.mainContent}>
            <img draggable={false} src="/assets/logo.svg" alt="letmeask" />

            <form onSubmit={handleSubmit(handleSignIn)}>
              <input
                autoFocus
                id="username"
                name="username"
                placeholder="Digite o seu username"
                type="text"
                {...register("username")}
              />
              <input
                id="password"
                name="password"
                placeholder="Código de acesso"
                type="password"
                {...register("password")}
              />

              <Button
                type="submit"
                isLoading={loginIsLoading}
                text="Entrar na plataforma"
              />
            </form>
          </div>
        </main>
      </div>
    </>
  );
}
